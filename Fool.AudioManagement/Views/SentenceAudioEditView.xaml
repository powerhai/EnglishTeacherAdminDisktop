<UserControl x:Class="Fool.AudioManagement.Views.SentenceAudioEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"             
             prism:ViewModelLocator.AutoWireViewModel="True"
               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:views="clr-namespace:Fool.AudioManagement.Views"
              xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
              xmlns:controls="clr-namespace:Fool.Wpf.Controls;assembly=Fool.Wpf.Controls"
              mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"  
              xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             >
    <UserControl.Resources>
        <Style x:Key="ListViewItemStyle1" TargetType="{x:Type ListViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="2"></RowDefinition>
                                </Grid.RowDefinitions>
                              
                                <GridViewRowPresenter Grid.Row="0" Content="{TemplateBinding Content}"
       Columns="{TemplateBinding GridView.ColumnCollection}"/>
                                <controls:RangeShowbar x:Name="Showbar"  Foreground="OrangeRed" Maximum="{Binding Path=DataContext.Length,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"  Grid.Row="1"
                              LowerValue="{Binding Start, Mode=TwoWay}"
                              HigherValue="{Binding End, Mode=TwoWay}"></controls:RangeShowbar>
                                
                            </Grid>
                           

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#D4E9FE"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#77BEFB"/>
                                <Setter TargetName="Showbar" Property="Visibility" Value="Hidden"></Setter>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="5"/>

            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Label  Style="{DynamicResource ResourceKey=LabelStyle}">Generate Audio</Label>
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition Height="2"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="2"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="2"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="2"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80"></ColumnDefinition>
                <ColumnDefinition Width="1*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock>Audio:</TextBlock>
            <views:AudioPlayerView Grid.Column="1"></views:AudioPlayerView>
            <TextBlock Grid.Row="2">Text:</TextBlock>
            <TextBox Grid.Row="2" Grid.Column="1" TextWrapping="Wrap"
  AcceptsReturn="True"
  VerticalScrollBarVisibility="Visible"  Text="{Binding Text,UpdateSourceTrigger=PropertyChanged}"></TextBox>
            <TextBlock Grid.Row="4">Sentences:</TextBlock>
            <ListView Grid.Column="1" Grid.Row="4" ItemContainerStyle="{StaticResource ListViewItemStyle1}" ItemsSource="{Binding SentenceViewSource.View}" IsSynchronizedWithCurrentItem="True">
                <ListView.View>
                    <GridView>
                        <GridViewColumn DisplayMemberBinding="{Binding Sentence}" Width="650" Header="Sentence"></GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <TextBlock Grid.Row="6">Current:</TextBlock>
            <TextBlock Grid.Row="6" Grid.Column="1" Text="{Binding SentenceViewSource.View.CurrentItem.Sentence}"></TextBlock>
            <Grid Grid.Row="8" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <xctk:RangeSlider  Maximum="{Binding Length}" 
                              LowerValue="{Binding SentenceViewSource.View.CurrentItem.Start, Mode=TwoWay}"
                              HigherValue="{Binding SentenceViewSource.View.CurrentItem.End, Mode=TwoWay}" LowerThumbBackground="#FF0043A4" RangeBackground="#FF7DFD9A"
                               HigherRangeBackground="#FFBDBDBD" HigherThumbBackground="#FF0E57B0" BorderBrush="#FFA84444" LowerRangeBackground="#FFB4B4B4"
                              HigherValueChanged="RangeSlider_OnHigherValueChanged"
                             >
                    <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="HigherValueChanged">
                            <i:InvokeCommandAction Command="{Binding ResetRangeCommand}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->
                </xctk:RangeSlider>
                <Button Style="{DynamicResource ZoomButtonStyle}" Background="{DynamicResource PicPlay}" Grid.Column="2" Command="{Binding PlaySentenceCommand}"></Button>
                <Button Style="{DynamicResource ZoomButtonStyle}" Background="{DynamicResource PicPause}" Grid.Column="4" Command="{Binding PauseCommand}"></Button>
            </Grid>
        </Grid>

        <Border Grid.Row="4"   >
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Command="{Binding CleanTextCommand}">Clean Text</Button>
                <Border Width="10"/>
                <Button Command="{Binding AnalyseTextCommand}">Analyse Text</Button>
                <Border Width="10"/>
                <Button Command="{Binding SaveCommand}">Save</Button>
            </StackPanel>
        </Border>
        <xctk:BusyIndicator IsBusy="{Binding IsBusy}"  Grid.RowSpan="10" Margin="-5">
            <xctk:BusyIndicator.OverlayStyle>
                <Style TargetType="{x:Type Rectangle}">
                    <Setter Property="Fill" Value="#6F808080"></Setter>
                </Style>
            </xctk:BusyIndicator.OverlayStyle>
            <ContentControl  />
        </xctk:BusyIndicator>
    </Grid>
</UserControl>
